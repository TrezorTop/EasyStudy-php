@use "../services/services";

header {
  .navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0 1.7rem;
    padding: 2rem 0;

    .logo {
      a {
        font-weight: bold;
        font-size: .9rem;
        color: white;
      }
    }

    nav {
      ul {
        display: flex;
        align-items: center;
      }
    }

    .buttons {
      text-transform: uppercase;
    }

    .StandardButton {
      @include services.Button(
                      transparent,
                      rgba(gray, .4),
                      white, white,
                      false, 0, 0,
                      true,
                      services.$border-radius,
                      Rubik,
                      0.7rem,
                      0.5rem, 1.1rem, 0.5rem, 1.1rem
      );
    }

    #CreateAccount {
      margin-left: 0.833rem;
      @include services.Button(
                      services.$button,
                      services.$buttonHover,
                      white, white,
                      false, 0, 0,
                      true,
                      services.$border-radius,
                      Rubik,
                      0.8rem,
                      0.5rem, 1.1rem, 0.5rem, 1.1rem
      );
    }
  }

  hr {
    border: none;
    color: red;
    background-color: rgba(white, .1);
    height: 2px;
  }
}

main {
  padding: 5rem 1%;
  max-width: 1170px;
  width: 100%;

  display: grid;
  grid-template-columns: 1fr 0.9fr;
  gap: 15%;

  .info {
    h1 {
      font-size: 3rem;
      text-transform: uppercase;
      color: white;
      font-weight: lighter;
    }

    p {
      font-size: 1.3rem;
      color: white;
      font-weight: lighter;
    }
  }

  .card {
    background-color: white;
    padding: 15% 13%;
    border-radius: services.$border-radius;

    form {
      .description {
        display: flex;
        flex-direction: column;
        text-align: center;

        h2 {
          text-transform: uppercase;
          font-size: 1.3rem;
          color: services.$textPrimary;
        }
        p {
          margin: 2rem 0;
          color: services.$textParagraph;
        }
      }

      .DataInput {
        .data {
          display: flex;
          flex-direction: column;
          gap: .9rem;

          input {
            width: 100%;
            padding: .8rem;
            background-color: services.$input-bgc;
            border-radius: services.$border-radius;
            border: solid 1px rgba(gray, .4);
            font-size: .9rem;
            @include services.transition(
                            box-shadow,
                            services.$inputTransition);

            &:focus {
              -webkit-box-shadow: 0 10px 52px 0 rgba(gray, .4);
              box-shadow: 0 10px 52px 0 rgba(gray, .4);
              outline: none;
            }
          }
        }

        .settings {
          margin: 1.4rem 0;
          display: flex;
          justify-content: space-between;

          .checkbox {
            label {
              display: inline-flex;
              align-items: center;
              user-select: none;

              &:hover {
                cursor: pointer;
              }

              input {
                position: absolute;
                z-index: -1;
                opacity: 0;

                &:checked ~ span {
                  background-color: darken(services.$input-bgc, 4%);
                }
                &:checked ~ span::after {
                  content: '\2714';
                  color: services.$textPrimary;
                  position: absolute;
                  font-size: .8rem;
                  right: .5px;
                  top: 0;
                }
              }

              span {
                content: '';
                position: relative;
                display: inline-block;
                width: 1rem;
                height: 1rem;
                background-color: services.$input-bgc;
                border-radius: services.$border-radius;
                border: solid 1px rgba(gray, .4);
              }

              p {
                font-size: .8rem;
                color: services.$textParagraph;
                margin-left: .8rem;
              }
            }
          }

          a {
            font-size: .8rem;
            color: services.$accent;

            &:hover {
              text-decoration: underline;
            }
          }
        }

        .submit {
          button {
            width: 100%;
            border: none;
            text-transform: uppercase;

            @include services.Button(
              services.$accent,
              darken(services.$accent, 10%),
              white, white,
              false, 0, 0,
              true, services.$border-radius,
              Rubik,
              .7rem,
              .9rem, 0, .9rem, 0
            )
          }
        }
      }
    }
  }
}